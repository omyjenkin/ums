<#@ template language="C#" debug="True" #>
<#@ output extension="cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="$(SolutionDir)\UMS.Models\bin\Debug\UMS.Models.dll" #>
<#@ import namespace="System.IO" #>
<#@ Import Namespace="System.Linq" #>
<#@ Import Namespace="System.Text" #>
<#@ import namespace="System.Reflection" #>
<#@ Import Namespace="System.Collections.Generic" #>
<#@ Import Namespace="UMS.Models" #>

<#@ include file="T4Toolbox.tt" #>
<#
    string currentPath = Path.GetDirectoryName(Host.TemplateFile);
    string projectPath =currentPath.Substring(0, currentPath.IndexOf(@"\T4"));
    string solutionPath = currentPath.Substring(0, currentPath.IndexOf(@"\UMS.Core"));
	string idalPath=Path.Combine(solutionPath,"UMS.Core");

    string modelFile= Path.Combine(solutionPath, @"UMS.Models\bin\Debug\UMS.Models.dll");
    byte[] fileData= File.ReadAllBytes(modelFile);
    Assembly assembly = Assembly.Load(fileData);
    Type baseType = typeof(EntityBase);
    IEnumerable<Type> modelTypes = assembly.GetTypes().Where(m =>baseType.FullName.Equals(m.BaseType.FullName)&&!m.IsAbstract);
    foreach(Type modelType in modelTypes)
    {
        T4ModelInfo model = new T4ModelInfo(modelType);
		

        
        //实体仓储操作接口
        BLLTemplate irep= new BLLTemplate(model);
        var path = model.UseModuleDir
            ? string.Format(@"{0}\Generated\Impl\{1}", idalPath, model.ModuleName)
            : string.Format(@"{0}\Generated\Impl", idalPath);
        irep.Output.Encoding = Encoding.UTF8;
        irep.RenderToFile(Path.Combine(path, irep.FileName));
	 
        
    }
#>

<#+


public class BLLTemplate : CSharpTemplate
{
    private T4ModelInfo _model;
        
    public BLLTemplate(T4ModelInfo model)
    {
        _model = model;
    }

    /// <summary>
    /// 获取 生成的文件名，根据模型名定义
    /// </summary>
    public string FileName
    {
        get
        { 
            return string.Format("{0}Service.generated.cs", _model.Name);
        }
    }

	public override string TransformText()
	{
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
//	   如存在本生成代码外的新需求，请在相同命名空间下创建同名分部类进行实现。
// </auto-generated>
//

//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;


using UMS.Models<#= _model.UseModuleDir ? "." + _model.ModuleName : "" #>;
using UMS.Core<#= _model.UseModuleDir ? "." + _model.ModuleName : "" #>;
using UMS.Core.Data<#= _model.UseModuleDir ? "." + _model.ModuleName : "" #>;
using UMS.Component.Data;


namespace UMS.Core<#= _model.UseModuleDir ? "." + _model.ModuleName : "" #>
{
	/// <summary>
    ///   业务层——<#= _model.Description #>
    /// </summary>
    public partial class <#= _model.Name #>Service:BaseService<<#= _model.Name #>,<#= _model.KeyTypeName #>>,I<#= _model.Name #>Service,IDependency
    {  
		
        public I<#= _model.Name #>Repository CurrentRepository { get; set; }

		
        public override IRepository<<#= _model.Name #>, <#= _model.KeyTypeName #>> BaseRepository { get; set; }
	}
}
<#+
        return this.GenerationEnvironment.ToString();
	}
}
#>