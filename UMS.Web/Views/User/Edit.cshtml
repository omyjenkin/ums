@using UMS.Models;
@model SysUser
@{
    ViewBag.Title = "创建";
    Layout = "~/Views/Shared/_Index_LayoutEdit.cshtml";
    List<PermModel> perm = (List<PermModel>)ViewBag.Perm;
    if (perm == null)
    {
        perm = new List<PermModel>();
    }
}

<script type="text/javascript">
    $(function () {
        $("#btnSave").click(function() {
                $.ajax({
                    url: "/User/Edit",
                    type: "Post",
                    data: $("#CreateForm").serialize(),
                    dataType: "json",
                    success: function (data) {
                        if (data.ResultType == 0) {
                            window.parent.frameReturnByMes(data.Message);
                            window.parent.frameReturnByReload(true);
                            window.parent.frameReturnByClose()
                        }
                        else {
                            window.parent.frameReturnByMes(data.Message);
                        }
                    }
                });
        });
        $("#btnReturn").click(function () {
            window.parent.frameReturnByClose();
        });
    });
</script>


<div style="height:100%;width:100%;">
    <div class="dialog-toolbar mvctoolbar">
        @Html.ToolButton("btnSave", "icon-save", "保存", perm, "Save", true)
        @Html.ToolButton("btnReturn", "icon-return", "返回", false)
    </div>
    <div class="mvcdialog">

        @using (Html.BeginForm("Create", "User", null, FormMethod.Post, new { Id = "CreateForm", role = "form" }))
            {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div class="container panel-body">
                <div class="row">
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Id)
                            @Html.EditorFor(model => model.Id, new { @class = "form-control" }, true)
                            <span class="help-inline">@Html.ValidationMessageFor(model => model.Id)</span>
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName)
                            @Html.EditorFor(model => model.UserName, new { @class = "form-control" }, true)
                            @Html.ValidationMessageFor(model => model.UserName)
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.TrueName)
                            @Html.EditorFor(model => model.TrueName, new { @class = "form-control" }, true)
                            @Html.ValidationMessageFor(model => model.TrueName)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.MobileNumber)
                            @Html.EditorFor(model => model.MobileNumber, new { @class = "form-control" }, true)
                            <span class="help-inline">@Html.ValidationMessageFor(model => model.MobileNumber)</span>
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.QQ)
                            @Html.EditorFor(model => model.QQ, new { @class = "form-control" }, true)
                            @Html.ValidationMessageFor(model => model.QQ)
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmailAddress)
                            @Html.EditorFor(model => model.EmailAddress, new { @class = "form-control" }, true)
                            @Html.ValidationMessageFor(model => model.EmailAddress)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Sex)
                            @Html.EditorFor(model => model.Sex, new { @class = "form-control" }, true)
                            <span class="help-inline">@Html.ValidationMessageFor(model => model.Sex)</span>
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Birthday)
                            @Html.EditorFor(model => model.Birthday, new { @class = "form-control" }, true)
                            @Html.ValidationMessageFor(model => model.Birthday)
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Marital)
                            @Html.EditorFor(model => model.Marital, new { @class = "form-control" }, true)
                            @Html.ValidationMessageFor(model => model.Marital)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Province)
                            @Html.EditorFor(model => model.Province, new { @class = "form-control" }, true)
                            <span class="help-inline">@Html.ValidationMessageFor(model => model.Province)</span>
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.City)
                            @Html.EditorFor(model => model.City, new { @class = "form-control" }, true)
                            @Html.ValidationMessageFor(model => model.City)
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Village)
                            @Html.EditorFor(model => model.Village, new { @class = "form-control" }, true)
                            @Html.ValidationMessageFor(model => model.Village)
                        </div>
                    </div>
                </div>
                <div class="row">

                    <div class="col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address)
                            @Html.EditorFor(model => model.Address, new { @class = "form-control" }, true)
                            @Html.ValidationMessageFor(model => model.Address)
                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Political)
                            @Html.EditorFor(model => model.Political, new { @class = "form-control" }, true)
                            <span class="help-inline">@Html.ValidationMessageFor(model => model.Political)</span>
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Nationality)
                            @Html.EditorFor(model => model.Nationality, new { @class = "form-control" }, true)
                            @Html.ValidationMessageFor(model => model.Nationality)
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Native)
                            @Html.EditorFor(model => model.Native, new { @class = "form-control" }, true)
                            @Html.ValidationMessageFor(model => model.Native)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.School)
                            @Html.EditorFor(model => model.School, new { @class = "form-control" }, true)
                            <span class="help-inline">@Html.ValidationMessageFor(model => model.School)</span>
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Professional)
                            @Html.EditorFor(model => model.Professional, new { @class = "form-control" }, true)
                            @Html.ValidationMessageFor(model => model.Professional)
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Degree)
                            @Html.EditorFor(model => model.Degree, new { @class = "form-control" }, true)
                            @Html.ValidationMessageFor(model => model.Degree)
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>
</div>